export class InMemoryCacheHandler {
    constructor() {
        this.cache = new Map();
    }
    add(url, html, options = { revalidate: null }) {
        const htmlWithMsg = html + cacheMsg(options.revalidate);
        return new Promise((resolve, reject) => {
            const cacheData = {
                html: htmlWithMsg,
                options,
                createdAt: Date.now()
            };
            this.cache.set(url, cacheData);
            resolve();
        });
    }
    get(url) {
        return new Promise((resolve, reject) => {
            if (this.cache.has(url)) {
                resolve(this.cache.get(url));
            }
            reject('This url does not exist in cache!');
        });
    }
    getAll() {
        return new Promise((resolve, reject) => {
            resolve(Array.from(this.cache.keys()));
        });
    }
    has(url) {
        return new Promise((resolve, reject) => {
            resolve(this.cache.has(url));
        });
    }
    delete(url) {
        return new Promise((resolve, reject) => {
            resolve(this.cache.delete(url));
        });
    }
}
const cacheMsg = (revalidateTime) => {
    const time = new Date().toISOString()
        .replace(/T/, ' ')
        .replace(/\..+/, '');
    let msg = '<!-- ';
    msg += `\n🚀 NgxISR: Served from cache! \n⌛ Last updated: ${time}. `;
    if (revalidateTime) {
        msg += `\n⏭️ Next refresh is after ${revalidateTime} seconds. `;
    }
    msg += ' \n-->';
    return msg;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW4tbWVtb3J5LWNhY2hlLWhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaXNyL3NyYy9saWIvY2FjaGUtaGFuZGxlcnMvaW4tbWVtb3J5LWNhY2hlLWhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxPQUFPLG9CQUFvQjtJQUFqQztRQUNZLFVBQUssR0FBRyxJQUFJLEdBQUcsRUFBcUIsQ0FBQztJQTJDakQsQ0FBQztJQXpDQyxHQUFHLENBQUMsR0FBVyxFQUFFLElBQVksRUFBRSxVQUFzQixFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUU7UUFFdkUsTUFBTSxXQUFXLEdBQUcsSUFBSSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFeEQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUNyQyxNQUFNLFNBQVMsR0FBYztnQkFDM0IsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLE9BQU87Z0JBQ1AsU0FBUyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUU7YUFDdEIsQ0FBQztZQUNGLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztZQUMvQixPQUFPLEVBQUUsQ0FBQztRQUNaLENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELEdBQUcsQ0FBQyxHQUFXO1FBQ2IsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUNyQyxJQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUN0QixPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFFLENBQUMsQ0FBQzthQUMvQjtZQUNELE1BQU0sQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDO1FBQzlDLENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELE1BQU07UUFDSixPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3JDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBQ3hDLENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELEdBQUcsQ0FBQyxHQUFXO1FBQ2IsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUNyQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMvQixDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsR0FBVztRQUNoQixPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3JDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztDQUNGO0FBRUQsTUFBTSxRQUFRLEdBQUcsQ0FBQyxjQUE4QixFQUFVLEVBQUU7SUFDMUQsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUU7U0FDbEMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUM7U0FDakIsT0FBTyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUV0QixJQUFJLEdBQUcsR0FBRyxPQUFPLENBQUM7SUFFbEIsR0FBRyxJQUFJLHFEQUFxRCxJQUFJLElBQUksQ0FBQztJQUVyRSxJQUFJLGNBQWMsRUFBRTtRQUNsQixHQUFHLElBQUksOEJBQThCLGNBQWMsWUFBWSxDQUFDO0tBQ2pFO0lBRUQsR0FBRyxJQUFJLFFBQVEsQ0FBQztJQUVoQixPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhY2hlRGF0YSwgQ2FjaGVIYW5kbGVyLCBJU1JPcHRpb25zIH0gZnJvbSBcIi4uL21vZGVsc1wiO1xuXG5leHBvcnQgY2xhc3MgSW5NZW1vcnlDYWNoZUhhbmRsZXIgaW1wbGVtZW50cyBDYWNoZUhhbmRsZXIge1xuICBwcm90ZWN0ZWQgY2FjaGUgPSBuZXcgTWFwPHN0cmluZywgQ2FjaGVEYXRhPigpO1xuXG4gIGFkZCh1cmw6IHN0cmluZywgaHRtbDogc3RyaW5nLCBvcHRpb25zOiBJU1JPcHRpb25zID0geyByZXZhbGlkYXRlOiBudWxsIH0pOiBQcm9taXNlPHZvaWQ+IHtcblxuICAgIGNvbnN0IGh0bWxXaXRoTXNnID0gaHRtbCArIGNhY2hlTXNnKG9wdGlvbnMucmV2YWxpZGF0ZSk7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29uc3QgY2FjaGVEYXRhOiBDYWNoZURhdGEgPSB7XG4gICAgICAgIGh0bWw6IGh0bWxXaXRoTXNnLFxuICAgICAgICBvcHRpb25zLFxuICAgICAgICBjcmVhdGVkQXQ6IERhdGUubm93KClcbiAgICAgIH07XG4gICAgICB0aGlzLmNhY2hlLnNldCh1cmwsIGNhY2hlRGF0YSk7XG4gICAgICByZXNvbHZlKCk7XG4gICAgfSlcbiAgfVxuXG4gIGdldCh1cmw6IHN0cmluZyk6IFByb21pc2U8Q2FjaGVEYXRhPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmKHRoaXMuY2FjaGUuaGFzKHVybCkpIHtcbiAgICAgICAgcmVzb2x2ZSh0aGlzLmNhY2hlLmdldCh1cmwpISk7XG4gICAgICB9XG4gICAgICByZWplY3QoJ1RoaXMgdXJsIGRvZXMgbm90IGV4aXN0IGluIGNhY2hlIScpO1xuICAgIH0pXG4gIH1cblxuICBnZXRBbGwoKTogUHJvbWlzZTxzdHJpbmdbXT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICByZXNvbHZlKEFycmF5LmZyb20odGhpcy5jYWNoZS5rZXlzKCkpKVxuICAgIH0pXG4gIH1cblxuICBoYXModXJsOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgcmVzb2x2ZSh0aGlzLmNhY2hlLmhhcyh1cmwpKTtcbiAgICB9KVxuICB9XG5cbiAgZGVsZXRlKHVybDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHJlc29sdmUodGhpcy5jYWNoZS5kZWxldGUodXJsKSk7XG4gICAgfSlcbiAgfVxufVxuXG5jb25zdCBjYWNoZU1zZyA9IChyZXZhbGlkYXRlVGltZT86IG51bWJlciB8IG51bGwpOiBzdHJpbmcgPT4ge1xuICBjb25zdCB0aW1lID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgLnJlcGxhY2UoL1QvLCAnICcpXG4gICAgLnJlcGxhY2UoL1xcLi4rLywgJycpXG5cbiAgbGV0IG1zZyA9ICc8IS0tICc7XG5cbiAgbXNnICs9IGBcXG7wn5qAIE5neElTUjogU2VydmVkIGZyb20gY2FjaGUhIFxcbuKMmyBMYXN0IHVwZGF0ZWQ6ICR7dGltZX0uIGA7XG5cbiAgaWYgKHJldmFsaWRhdGVUaW1lKSB7XG4gICAgbXNnICs9IGBcXG7ij63vuI8gTmV4dCByZWZyZXNoIGlzIGFmdGVyICR7cmV2YWxpZGF0ZVRpbWV9IHNlY29uZHMuIGA7XG4gIH1cblxuICBtc2cgKz0gJyBcXG4tLT4nO1xuXG4gIHJldHVybiBtc2c7XG59XG4iXX0=