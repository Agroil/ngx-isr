import { APP_BASE_HREF } from '@angular/common';
// helper method that generates html of an url
export const renderUrl = async (options) => {
    const { req, res, url, indexHtml, providers } = options;
    // we need to override url of req with the one we have in parameters
    req.url = url;
    req.originalUrl = url;
    return new Promise((resolve, reject) => {
        res.render(indexHtml, {
            req,
            providers: providers ?? [{ provide: APP_BASE_HREF, useValue: req.baseUrl }],
        }, async (err, html) => {
            if (err) {
                reject(err);
            }
            resolve(html);
        });
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLXVybC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1pc3Ivc3JjL2xpYi91dGlscy9yZW5kZXItdXJsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQVdoRCw4Q0FBOEM7QUFDOUMsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLEtBQUssRUFBRSxPQUF3QixFQUFtQixFQUFFO0lBQzNFLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLEdBQUcsT0FBTyxDQUFDO0lBRXhELG9FQUFvRTtJQUNwRSxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUNkLEdBQUcsQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDO0lBRXRCLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7UUFDckMsR0FBRyxDQUFDLE1BQU0sQ0FDUixTQUFTLEVBQ1Q7WUFDRSxHQUFHO1lBQ0gsU0FBUyxFQUFFLFNBQVMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQzVFLEVBQ0QsS0FBSyxFQUFFLEdBQVUsRUFBRSxJQUFZLEVBQUUsRUFBRTtZQUNqQyxJQUFJLEdBQUcsRUFBRTtnQkFDUCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDYjtZQUNELE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoQixDQUFDLENBQ0YsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQVBQX0JBU0VfSFJFRiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlbmRlclVybENvbmZpZyB7XG4gIHJlcTogYW55O1xuICByZXM6IGFueTtcbiAgdXJsOiBzdHJpbmc7XG4gIGluZGV4SHRtbDogc3RyaW5nO1xuICBwcm92aWRlcnM/OiBQcm92aWRlcltdO1xufVxuXG4vLyBoZWxwZXIgbWV0aG9kIHRoYXQgZ2VuZXJhdGVzIGh0bWwgb2YgYW4gdXJsXG5leHBvcnQgY29uc3QgcmVuZGVyVXJsID0gYXN5bmMgKG9wdGlvbnM6IFJlbmRlclVybENvbmZpZyk6IFByb21pc2U8c3RyaW5nPiA9PiB7XG4gIGNvbnN0IHsgcmVxLCByZXMsIHVybCwgaW5kZXhIdG1sLCBwcm92aWRlcnMgfSA9IG9wdGlvbnM7XG5cbiAgLy8gd2UgbmVlZCB0byBvdmVycmlkZSB1cmwgb2YgcmVxIHdpdGggdGhlIG9uZSB3ZSBoYXZlIGluIHBhcmFtZXRlcnNcbiAgcmVxLnVybCA9IHVybDtcbiAgcmVxLm9yaWdpbmFsVXJsID0gdXJsO1xuXG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgcmVzLnJlbmRlcihcbiAgICAgIGluZGV4SHRtbCxcbiAgICAgIHtcbiAgICAgICAgcmVxLFxuICAgICAgICBwcm92aWRlcnM6IHByb3ZpZGVycyA/PyBbeyBwcm92aWRlOiBBUFBfQkFTRV9IUkVGLCB1c2VWYWx1ZTogcmVxLmJhc2VVcmwgfV0sXG4gICAgICB9LFxuICAgICAgYXN5bmMgKGVycjogRXJyb3IsIGh0bWw6IHN0cmluZykgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgIH1cbiAgICAgICAgcmVzb2x2ZShodG1sKTtcbiAgICAgIH1cbiAgICApO1xuICB9KTtcbn07XG4iXX0=